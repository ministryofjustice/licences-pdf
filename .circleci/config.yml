version: 2

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
      - run: ./gradlew build
      - run:
          name: Record the Application Version
          command: |
            APP_VERSION=$(unzip -p build/libs/licencespdf-*.jar BOOT-INF/classes/META-INF/build-info.properties | awk -F = '/build.version/ {print $2}')

            # make up a good version name
            ([[ "${CIRCLE_BRANCH}" == "master" ]] && echo "$APP_VERSION" || echo "${APP_VERSION}.${CIRCLE_BRANCH}") | tee ./app_version.txt | awk '{print "Setting app version to " $1}'

      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle
            - Dockerfile
            - app_version.txt

  build_docker:
    docker:
      - image: circleci/python:3
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/app
      - run:
          name: Build container and publish to docker hub
          command: |
            APP_VERSION=$(cat ./app_version.txt)

            # Build the image
            docker build --rm=false . \
               --tag "mojdigitalstudio/pdf-generator:$APP_VERSION" \
               --label "maintainer=licences-team@digital.justice.gov.uk" \
               --label "app.version=$APP_VERSION" \
               --label "build.version=$APP_VERSION" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            # Publish to docker hub
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push mojdigitalstudio/pdf-generator:$APP_VERSION
            docker tag mojdigitalstudio/pdf-generator:$APP_VERSION mojdigitalstudio/pdf-generator:latest
            docker push mojdigitalstudio/pdf-generator:latest

  deploy_release_to_eb:
    docker:
      - image: mojdigitalstudio/circleci-node-awsebcli
    working_directory: ~/app
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - deploy:
          name: Deploy to Elastic Beanstalk Dev
          command: |
            VERSION=$(cat ./app_version.txt)
            cat <<EOF > ./Dockerrun.aws.json
            {
               "AWSEBDockerrunVersion": "1",
               "Image": {
                 "Name": "mojdigitalstudio/pdf-generator:$VERSION",
                 "Update": "true"
               },
               "Ports": [
                 {"ContainerPort": "8080"}
               ]
            }
            EOF
            ~/.local/bin/eb deploy --process --verbose --label ${VERSION}
      - persist_to_workspace:
          root: .
          paths:
            - Dockerrun.aws.json
      - store_artifacts:
          path: Dockerrun.aws.json

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - build_docker:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy_release_to_eb:
          requires:
            - build_docker
